<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERET
        FhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4e
        Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wAARCABxAJYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDUurXVp7PzLHVrqaWFZJFZYVjVmVflZl/5aVl6DrEn9sTR3tvI
        t3BCs0m7csbSSf8APNm+8u6ud0G5kudNZpdQvPsUczbUTy42gbd/q9v3qjvLy+gtNl5DeMyySNbTqvn+
        Uv8AErfxbWX5vmrx5VNeU/W8PhGoqqmtXZq3S/fp+HY5C/XS/CHxB1W9m0W4ltZObSYRNIm9vmdl/wBp
        d38VaXi/V7tvFnh/SbSP7c3mRyXEqr5jLBIy/K3+z/FXbeHf7Pv9F86SzmuLKe3VmldtvmybW+61RS+F
        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
</value>
  </data>
</root>